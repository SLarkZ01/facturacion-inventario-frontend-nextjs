/* tslint:disable */
/* eslint-disable */
/**
 * RepoBackend API
 * API para gesti√≥n de inventario y ventas (productos, stock, carritos, facturas, talleres, favoritos)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: devs@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FacturaItemRequest } from './FacturaItemRequest';
import {
    FacturaItemRequestFromJSON,
    FacturaItemRequestFromJSONTyped,
    FacturaItemRequestToJSON,
} from './FacturaItemRequest';
import type { ClienteRequest } from './ClienteRequest';
import {
    ClienteRequestFromJSON,
    ClienteRequestFromJSONTyped,
    ClienteRequestToJSON,
} from './ClienteRequest';

/**
 * 
 * @export
 * @interface FacturaRequest
 */
export interface FacturaRequest {
    /**
     * 
     * @type {string}
     * @memberof FacturaRequest
     */
    numeroFactura?: string;
    /**
     * 
     * @type {string}
     * @memberof FacturaRequest
     */
    clienteId?: string;
    /**
     * 
     * @type {ClienteRequest}
     * @memberof FacturaRequest
     */
    cliente?: ClienteRequest;
    /**
     * 
     * @type {Array<FacturaItemRequest>}
     * @memberof FacturaRequest
     */
    items: Array<FacturaItemRequest>;
    /**
     * 
     * @type {number}
     * @memberof FacturaRequest
     */
    total?: number;
    /**
     * 
     * @type {string}
     * @memberof FacturaRequest
     */
    realizadoPor?: string;
    /**
     * 
     * @type {string}
     * @memberof FacturaRequest
     */
    estado?: string;
}

/**
 * Check if a given object implements the FacturaRequest interface.
 */
export function instanceOfFacturaRequest(value: object): value is FacturaRequest {
    if (!('items' in value) || value['items'] === undefined) return false;
    return true;
}

export function FacturaRequestFromJSON(json: any): FacturaRequest {
    return FacturaRequestFromJSONTyped(json, false);
}

export function FacturaRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): FacturaRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'numeroFactura': json['numeroFactura'] == null ? undefined : json['numeroFactura'],
        'clienteId': json['clienteId'] == null ? undefined : json['clienteId'],
        'cliente': json['cliente'] == null ? undefined : ClienteRequestFromJSON(json['cliente']),
        'items': ((json['items'] as Array<any>).map(FacturaItemRequestFromJSON)),
        'total': json['total'] == null ? undefined : json['total'],
        'realizadoPor': json['realizadoPor'] == null ? undefined : json['realizadoPor'],
        'estado': json['estado'] == null ? undefined : json['estado'],
    };
}

export function FacturaRequestToJSON(value?: FacturaRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'numeroFactura': value['numeroFactura'],
        'clienteId': value['clienteId'],
        'cliente': ClienteRequestToJSON(value['cliente']),
        'items': ((value['items'] as Array<any>).map(FacturaItemRequestToJSON)),
        'total': value['total'],
        'realizadoPor': value['realizadoPor'],
        'estado': value['estado'],
    };
}

